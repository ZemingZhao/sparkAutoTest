#!/bin/sh

###############################
###   common function  
###############################
function createReport ()
{
  reportDir=$AUTOTOOL_HOME/reports/report-`date +%s`
  mkdir $reportDir
  mkdir $reportDir/logs
  testReport=$reportDir/testReport.txt
  export reportDir
  export testReport
}
function writeReportTitle ()
{
  dateBeginRegression=`date`
  echo "---------------------------------------------------------------------"   &>> $testReport
  echo ""  &>> $testReport
  echo "                      Regression Test Report       "   &>> $testReport
  echo ""  &>> $testReport
  echo "---------------------------------------------------------------------"   &>> $testReport
  echo -n "     Ego Version: " &>> $testReport; egosh -V 1>/dev/null 2>> $testReport
  echo  "" >> $testReport
  echo -e "     SparkOnEgo Version: "`$SPARK_HOME/bin/spark-submit --egoversion`  &>> $testReport
  echo -e "     Date: " $dateBeginRegression  &>> $testReport
  echo "---------------------------------------------------------------------"   &>> $testReport
}
function writeReportStatistic ()
{
  casesPassed=`sed -n '/passed/'p $reportDir/testReport.txt | wc -l`
  casesFailed=`sed -n '/failed/'p $reportDir/testReport.txt | wc -l`
#  echo $casesPassed
#  echo $casesFailed
  casesTotal=`expr $casesPassed + $casesFailed`
#  echo $casesTotal
  if [[ "$casesTotal" -gt "0" ]]; then
     passRate=`awk 'BEGIN{printf "%.2f%%",('$casesPassed' * 100 / '$casesTotal')}'`   
  else
     passRate=0
  fi
  echo "----------------------------------------------------------------------"   &>> $testReport
  echo ""   &>> $testReport
  echo "     Total: $casesTotal" &>> $testReport
  echo "     Passed: $casesPassed" &>> $testReport
  echo "     Failed: $casesFailed" &>> $testReport
  echo "     Pass Rate: $passRate" &>> $testReport
  echo ""   &>> $testReport
  echo "----------------------------------------------------------------------"   &>> $testReport
}
function backupSparkConf ()
{
  cp $SPARK_CONF_DIR/spark-env.sh $SPARK_CONF_DIR/spark-env.sh.org.bak
  cp $SPARK_CONF_DIR/spark-defaults.conf $SPARK_CONF_DIR/spark-defaults.conf.org.bak
  cp $SPARK_CONF_DIR/log4j.properties $SPARK_CONF_DIR/log4j.properties.org.bak
  return 0
}
function recoverAndExit ()
{
   mv $SPARK_CONF_DIR/spark-env.sh.org.bak $SPARK_CONF_DIR/spark-env.sh
   mv $SPARK_CONF_DIR/spark-defaults.conf.org.bak $SPARK_CONF_DIR/spark-defaults.conf
   mv $SPARK_CONF_DIR/log4j.properties.org.bak $SPARK_CONF_DIR/log4j.properties
   if [ -n $1 ]; then
      exit $1 
   else
      exit 0
   fi
}

